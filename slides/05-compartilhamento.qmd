---
title: "Relatórios e apresentações automáticas"
subtitle: "Compartilhando resultados"
author: '<img src="https://d33wubrfki0l68.cloudfront.net/9b0699f18268059bdd2e5c21538a29eade7cbd2b/67e5c/img/logo/cursor1-5.png" width="30%">'
format: curso-r-revealjs
incremental: false
embed-resources: true
knitr:
  opts_chunk: 
    message: false
    warning: false
    echo: true
---


## Compartilhando os resultados

Podemos facilmente enviar os arquivos PDF e `.docx` via e-mail. Porém e no caso do output ser um HTML?

No HTML, muitas vezes o arquivo depende de outros arquivos (ou seja, ele não é auto-contido).

Podemos usar uma opção que permite fazer um arquivo autocontido, sem dependências (porém isso deixará seu arquivo grande, e também pode demorar para ser gerado):

```{{yaml}}
---
format:
  html:
    embed-resources: true
---
```

- [Documentação sobre documentos auto contidos (self contained)](https://quarto.org/docs/output-formats/html-basics.html#self-contained)



## Disponibilizar na internet

Outra forma é disponibilizar o HTML na internet, com serviços como Netlify Drop, quarto pub ou GitHub ! 

> DICA IMPORTANTE: Busque nomear seus arquivos como `index.html`

## Disponibilizar utilizando o Netlify Drop

- <https://app.netlify.com/drop>

- Gratuito

- Para quem não usa GitHub.

- Podemos subir uma pasta com todo o conteúdo dentro.

- Mais fácil, mas não dá pra ficar atualizando o material depois de um jeito fácil.



## Quarto pub


### Primeiros passos usando Quarto na linha de comando

-   O Quarto é um CLI: Command Line Interface - Interface de linha de comando.

-   Podemos usar o Quarto no terminal.

## 

``` bash
/cloud/project$ quarto help
  Usage:   quarto 
  Version: 1.3.287
                  
  Description:
    Quarto CLI
  Options:
    -h, --help     - Show this help.                            
    -V, --version  - Show the version number for this program.  
  Commands:

    render          [input] [args...]     - Render files or projects to various document types.        
    preview         [file] [args...]      - Render and preview a document or website project.          
    serve           [input]               - Serve a Shiny interactive document.                        
    create          [type] [commands...]  - Create a Quarto project or extension                       
    create-project  [dir]                 - Create a project for rendering multiple documents          
    convert         <input>               - Convert documents to alternate representations.            
    pandoc          [args...]             - Run the version of Pandoc embedded within Quarto.          
    run             [script] [args...]    - Run a TypeScript, R, Python, or Lua script.                
    add             <extension>           - Add an extension to this folder or project                 
    install         [target...]           - Installs an extension or global dependency.                
    publish         [provider] [path]     - Publish a document or project. Available providers include:
    check           [target]              - Verify correct functioning of Quarto installation.         
    help            [command]             - Show this help or the help of a sub-command.              
```

## QuartoPub

-   Vamos disponibilizar nossa apresentação no QuartoPub: <https://quartopub.com/>

-   No terminal, usar o comando a seguir, e seguir o passo a passo.

```bash
quarto publish quarto-pub nome-do-arquivo.qmd
```


## Disponibilizar utilizando o GitHub

- Gratuito! Porém é o mais "avançado".

- Três passos:

  1. Configurar o Git e o GitHub com o RStudio - 1 vez por usuário do computador.
  
  2. Vincular o projeto a um repositório no GitHub - 1 vez por projeto.
  
  3. Ativar o GitHub Pages - 1 vez por projeto.
  

## Disponibilizar utilizando o GitHub

- 1)  Precisa ter o Git e GitHub configurado com o seu RStudio  (esse vídeo é útil: <https://youtu.be/fiZStofJqMQ?t=2415> )

- 2) O projeto precisa estar vinculado a um repositório no GitHub:

```{r eval=FALSE, include=TRUE}
# é necessário rodar apenas uma vez
usethis::use_git()
usethis::use_github()
```

- 3) Ativar o GitHub Pages

```{r eval=FALSE, include=TRUE}
usethis::use_github_pages(
  branch = usethis::git_default_branch(), # branch principal
  path = "/" # ou /docs 
)
```


- O endereço do site será `https://seu-username.github.io/nome-repositorio/caminho-do-arquivo.html`  

